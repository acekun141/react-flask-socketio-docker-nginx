{"ast":null,"code":"var _jsxFileName = \"/home/ace/Documents/Project/privatechat/src/components/LoginFacebook.js\";\nimport React, { useState, useEffect } from 'react';\nimport { sign } from '../redux/reducer/user/actions';\nimport { FiFacebook } from 'react-icons/fi';\nimport FacebookLogin from 'react-facebook-login/dist/facebook-login-render-props';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nexport default function Facebook() {\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [buttonContent, setButtonContent] = useState(null);\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const user = useSelector(state => state.user);\n  useEffect(() => {\n    if (isLoggedIn) {\n      setButtonContent(null);\n    } else {\n      setButtonContent( /*#__PURE__*/React.createElement(FacebookLogin, {\n        appId: \"567500377224019\",\n        scope: \"public_profile,email,user_friends\",\n        fields: \"name,email,picture\",\n        onClick: componentClicked,\n        callback: responseFacebook,\n        render: renderProps => /*#__PURE__*/React.createElement(\"button\", {\n          onClick: renderProps.onClick,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(FiFacebook, {\n          size: 30,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 33\n          }\n        }), /*#__PURE__*/React.createElement(\"p\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 33\n          }\n        }, \"Login With Facebook\")),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 21\n        }\n      }));\n    }\n  }, [isLoggedIn]);\n  useEffect(() => {\n    if (user.name) {\n      history.replace('/');\n    }\n  }, [user]);\n\n  const responseFacebook = response => {\n    if (response.id && !isLoggedIn) {\n      dispatch(sign(response));\n      setIsLoggedIn(true);\n    }\n  };\n\n  const componentClicked = event => {};\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"wrap-login-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, buttonContent);\n}\n;","map":{"version":3,"sources":["/home/ace/Documents/Project/privatechat/src/components/LoginFacebook.js"],"names":["React","useState","useEffect","sign","FiFacebook","FacebookLogin","useDispatch","useSelector","useHistory","Facebook","isLoggedIn","setIsLoggedIn","buttonContent","setButtonContent","history","dispatch","user","state","componentClicked","responseFacebook","renderProps","onClick","name","replace","response","id","event"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,SAAQC,IAAR,QAAmB,+BAAnB;AACA,SAAQC,UAAR,QAAyB,gBAAzB;AACA,OAAOC,aAAP,MAA0B,uDAA1B;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,aAAvC;AACA,SAAQC,UAAR,QAAyB,kBAAzB;AAEA,eAAe,SAASC,QAAT,GAAoB;AAC/B,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BV,QAAQ,CAAC,KAAD,CAA5C;AACA,QAAM,CAACW,aAAD,EAAgBC,gBAAhB,IAAoCZ,QAAQ,CAAC,IAAD,CAAlD;AACA,QAAMa,OAAO,GAAGN,UAAU,EAA1B;AACA,QAAMO,QAAQ,GAAGT,WAAW,EAA5B;AACA,QAAMU,IAAI,GAAGT,WAAW,CAACU,KAAK,IAAIA,KAAK,CAACD,IAAhB,CAAxB;AACAd,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIQ,UAAJ,EAAgB;AACZG,MAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACH,KAFD,MAEO;AACHA,MAAAA,gBAAgB,eAER,oBAAC,aAAD;AACI,QAAA,KAAK,EAAC,iBADV;AAEI,QAAA,KAAK,EAAC,mCAFV;AAGI,QAAA,MAAM,EAAC,oBAHX;AAII,QAAA,OAAO,EAAEK,gBAJb;AAKI,QAAA,QAAQ,EAAEC,gBALd;AAMI,QAAA,MAAM,EAAEC,WAAW,iBACf;AAAQ,UAAA,OAAO,EAAEA,WAAW,CAACC,OAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACI,oBAAC,UAAD;AAAY,UAAA,IAAI,EAAE,EAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAFJ,CAPR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFQ,CAAhB;AAiBH;AACJ,GAtBQ,EAsBN,CAACX,UAAD,CAtBM,CAAT;AAuBAR,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIc,IAAI,CAACM,IAAT,EAAe;AACXR,MAAAA,OAAO,CAACS,OAAR,CAAgB,GAAhB;AACH;AACJ,GAJQ,EAIN,CAACP,IAAD,CAJM,CAAT;;AAKA,QAAMG,gBAAgB,GAAIK,QAAD,IAAc;AACnC,QAAIA,QAAQ,CAACC,EAAT,IAAe,CAACf,UAApB,EAAgC;AAC5BK,MAAAA,QAAQ,CAACZ,IAAI,CAACqB,QAAD,CAAL,CAAR;AACAb,MAAAA,aAAa,CAAC,IAAD,CAAb;AACH;AACJ,GALD;;AAMA,QAAMO,gBAAgB,GAAIQ,KAAD,IAAW,CAAE,CAAtC;;AACA,sBACI;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKd,aADL,CADJ;AAKH;AAAA","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport {sign} from '../redux/reducer/user/actions';\nimport {FiFacebook} from 'react-icons/fi';\nimport FacebookLogin from 'react-facebook-login/dist/facebook-login-render-props';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {useHistory} from 'react-router-dom';\n\nexport default function Facebook() {\n    const [isLoggedIn, setIsLoggedIn] = useState(false);\n    const [buttonContent, setButtonContent] = useState(null);\n    const history = useHistory();\n    const dispatch = useDispatch();\n    const user = useSelector(state => state.user);\n    useEffect(() => {\n        if (isLoggedIn) {\n            setButtonContent(null);\n        } else {\n            setButtonContent(\n                (\n                    <FacebookLogin\n                        appId=\"567500377224019\"\n                        scope=\"public_profile,email,user_friends\"\n                        fields=\"name,email,picture\"\n                        onClick={componentClicked}\n                        callback={responseFacebook}\n                        render={renderProps => (\n                            <button onClick={renderProps.onClick}>\n                                <FiFacebook size={30} />\n                                <p>Login With Facebook</p>\n                            </button>\n                        )}\n                    />\n                )\n            );\n        }\n    }, [isLoggedIn]);\n    useEffect(() => {\n        if (user.name) {\n            history.replace('/');\n        }\n    }, [user]);\n    const responseFacebook = (response) => {\n        if (response.id && !isLoggedIn) {\n            dispatch(sign(response));\n            setIsLoggedIn(true);\n        }\n    };\n    const componentClicked = (event) => {};\n    return (\n        <div className='wrap-login-button'>\n            {buttonContent}\n        </div>\n    );\n};\n"]},"metadata":{},"sourceType":"module"}