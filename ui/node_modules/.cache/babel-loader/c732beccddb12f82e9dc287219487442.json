{"ast":null,"code":"var _jsxFileName = \"/home/ace/Documents/Project/privatechat/src/components/RightSide.js\";\nimport React, { useState, useEffect } from 'react';\nimport { FiSend } from 'react-icons/fi';\nimport { Avatar } from '../pages/HomePage';\nimport { useParams } from 'react-router-dom';\nimport { FiMessageSquare } from 'react-icons/fi';\nimport { useHistory } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport defaultAvatar from '../images/avatar.png';\nimport { socket } from './Header';\nexport default function (props) {\n  const {\n    room_id\n  } = useParams();\n  const [next, setNext] = useState(false);\n  const [messages, setMessages] = useState([]);\n  const history = useHistory();\n\n  const get_message = async (room_id, next) => {\n    try {\n      const response = await fetch('/chat/message', {\n        method: 'GET',\n        headers: {\n          'x-access-token': localStorage.getItem('token'),\n          'Content-Type': 'application/json',\n          'room_id': room_id,\n          'page': next\n        }\n      });\n      const data = await response.json();\n\n      if (data.messages) {\n        setMessages([...data.messages]);\n\n        if (data.next) {\n          setNext(data.next);\n        } else {\n          setNext(false);\n        }\n      } else {\n        throw 'Error';\n      }\n    } catch (error) {\n      history.replace('/direct');\n    }\n  };\n\n  const get_next_message = () => {\n    get_message(room_id, next);\n  };\n\n  useEffect(() => {\n    if (room_id) {\n      get_message(room_id, 1);\n    }\n  }, [room_id]);\n  return room_id ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"right-side\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(RoomInfo, {\n    roomInfo: props.roomInfo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(MessageBox, {\n    messages: messages,\n    room_id: room_id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  })) : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"right-side none-direct\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FiMessageSquare, {\n    size: 60,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }, \"Select your room\"));\n}\n;\n\nconst MessageBox = props => {\n  const [messages, setMessages] = useState([]);\n  const user = useSelector(state => state.user);\n  const msgs = document.getElementById('messages');\n  useEffect(() => {\n    socket.on('send_message', data => {\n      let date = new Date(data.date);\n      setMessages([...messages, {\n        user_id: data.user_id,\n        message: data.message,\n        id: data.id,\n        date: `${date.getUTCHours()}:${date.getUTCMinutes()}`\n      }]);\n    });\n\n    if (msgs) {\n      setTimeout(() => {\n        msgs.scrollTop = msgs.scrollHeight;\n      }, 1);\n    }\n\n    return () => {\n      socket.off('send_mesasge');\n    };\n  }, [messages, msgs]);\n  useEffect(() => {\n    if (props.messages) {\n      setMessages(props.messages.map(message => {\n        const date = new Date(message.date);\n        return {\n          user_id: message.user_id,\n          message: message.message,\n          id: message.id,\n          date: `${date.getUTCHours()}:${date.getUTCMinutes()}`\n        };\n      }));\n\n      if (msgs) {\n        setTimeout(() => {\n          msgs.scrollTop = msgs.scrollHeight;\n        }, 1);\n      }\n    }\n  }, [props.messages, msgs]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"side-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"messages\",\n    id: \"messages\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }\n  }, messages.sort((a, b) => a.id - b.id).map(message => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: message.id,\n      className: `wrap-message ${user.userID === message.user_id ? 'your-message' : ''}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"message\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 29\n      }\n    }, message.message), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"time\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 29\n      }\n    }, message.date));\n  })), /*#__PURE__*/React.createElement(SendMessage, {\n    room_id: props.room_id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }\n  }));\n};\n\nconst SendMessage = props => {\n  const [message, setMessage] = useState('');\n\n  const handleChange = event => {\n    setMessage(event.target.value);\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    if (message) try {\n      socket.emit('receive_message', {\n        room_id: props.room_id,\n        message: message,\n        token: localStorage.getItem('token')\n      });\n    } catch (error) {\n      alert('Something Wrong! Try later');\n    }\n    setMessage('');\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"typing\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: e => handleSubmit(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Message...\",\n    value: message,\n    onChange: e => handleChange(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FiSend, {\n    size: 25,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 21\n    }\n  }))));\n};\n\nconst RoomInfo = props => {\n  const [roomInfo, setRoomInfo] = useState({});\n  useEffect(() => {\n    setRoomInfo(props.roomInfo);\n  }, [props.roomInfo]);\n  return roomInfo.user ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"side-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Avatar, {\n    url: roomInfo.user.avatar ? roomInfo.user.avatar : defaultAvatar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 13\n    }\n  }, roomInfo.user.name)) : null;\n};","map":{"version":3,"sources":["/home/ace/Documents/Project/privatechat/src/components/RightSide.js"],"names":["React","useState","useEffect","FiSend","Avatar","useParams","FiMessageSquare","useHistory","useSelector","defaultAvatar","socket","props","room_id","next","setNext","messages","setMessages","history","get_message","response","fetch","method","headers","localStorage","getItem","data","json","error","replace","get_next_message","roomInfo","MessageBox","user","state","msgs","document","getElementById","on","date","Date","user_id","message","id","getUTCHours","getUTCMinutes","setTimeout","scrollTop","scrollHeight","off","map","sort","a","b","userID","SendMessage","setMessage","handleChange","event","target","value","handleSubmit","preventDefault","emit","token","alert","e","RoomInfo","setRoomInfo","avatar","name"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport {FiSend} from 'react-icons/fi'\nimport {Avatar} from '../pages/HomePage';\nimport {useParams} from 'react-router-dom';\nimport {FiMessageSquare} from 'react-icons/fi';\nimport {useHistory} from 'react-router-dom';\nimport {useSelector} from 'react-redux';\nimport defaultAvatar from '../images/avatar.png';\nimport {socket} from './Header';\n\nexport default function(props) {\n    const {room_id} = useParams();\n    const [next, setNext] = useState(false);\n    const [messages, setMessages] = useState([]);\n    const history = useHistory();\n    const get_message = async (room_id, next) => {\n        try {\n            const response = await fetch('/chat/message', {\n                method: 'GET',\n                headers: {\n                    'x-access-token': localStorage.getItem('token'),\n                    'Content-Type': 'application/json',\n                    'room_id': room_id,\n                    'page': next\n                },\n            });\n            const data = await response.json();\n            if (data.messages) {\n                setMessages([...data.messages]);\n                if (data.next) {\n                    setNext(data.next);\n                } else {\n                    setNext(false);\n                }\n            } else {\n                throw('Error');\n            }\n        } catch(error) {\n            history.replace('/direct');\n        }\n    };\n    const get_next_message = () => {\n        get_message(room_id, next);\n    }\n    useEffect(() => {\n        if (room_id) {\n            get_message(room_id, 1);\n        }\n    }, [room_id]);\n    return (\n        room_id\n        ? \n        <div className='right-side'>\n            <RoomInfo roomInfo={props.roomInfo}/>\n            <MessageBox messages={messages} room_id={room_id} />\n        </div>\n        :\n        <div className='right-side none-direct'>\n            <FiMessageSquare size={60} />\n            <p>Select your room</p>\n        </div>\n    );\n};\n\n\nconst MessageBox = (props) => {\n    const [messages, setMessages] = useState([]);\n    const user = useSelector(state => state.user);\n    const msgs = document.getElementById('messages');\n    useEffect(() => {\n        socket.on('send_message', (data) => {\n            let date = new Date(data.date);\n            setMessages([...messages, {\n                user_id: data.user_id,\n                message: data.message,\n                id: data.id,\n                date: `${date.getUTCHours()}:${date.getUTCMinutes()}`\n            }]);\n        });\n        if (msgs) {\n            setTimeout(() => {msgs.scrollTop = msgs.scrollHeight}, 1);\n        }\n        return () => {\n            socket.off('send_mesasge');\n        }\n    }, [messages, msgs])\n    useEffect(() => {\n        if (props.messages) {\n            setMessages(props.messages.map(message => {\n                const date = new Date(message.date);\n                return {user_id: message.user_id,\n                        message: message.message,\n                        id: message.id,\n                        date: `${date.getUTCHours()}:${date.getUTCMinutes()}`\n                    }\n            }));\n            if (msgs) {\n                setTimeout(() => {msgs.scrollTop = msgs.scrollHeight}, 1);\n            }\n        }\n    }, [props.messages, msgs])\n    return (\n        <div className='side-content'>\n            <div className='messages' id='messages'>\n                {messages.sort((a, b) => a.id - b.id).map(message => {\n                    return (\n                        <div key={message.id} className={`wrap-message ${user.userID === message.user_id ? 'your-message' : ''}`}>\n                            <p className='message'>{message.message}</p>\n                            <p className='time'>{message.date}</p>\n                        </div>\n                    )\n                })}\n            </div>\n            <SendMessage room_id={props.room_id} />\n        </div>\n    )\n};\n\nconst SendMessage = (props) => {\n    const [message, setMessage] = useState('');\n    const handleChange = event => {\n        setMessage(event.target.value);\n    };\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        if (message)\n            try {\n                socket.emit('receive_message', {room_id: props.room_id, message: message, token: localStorage.getItem('token')});\n            } catch(error) {\n                alert('Something Wrong! Try later');\n            }\n            setMessage('');\n        };\n        return (\n        <div className='typing'>\n            <form onSubmit={(e) => handleSubmit(e)}>\n                <input\n                    type='text'\n                    placeholder='Message...'\n                    value={message}\n                    onChange={(e) => handleChange(e)}\n                />\n                <button type=\"submit\">\n                    <FiSend size={25}/>\n                </button>\n            </form>\n        </div>\n    );\n}\n\nconst RoomInfo = (props) => {\n    const [roomInfo, setRoomInfo] = useState({});\n    useEffect(() => {\n        setRoomInfo(props.roomInfo);\n    }, [props.roomInfo])\n    return (\n        roomInfo.user ?\n        <div className='side-header'>\n            <Avatar url={roomInfo.user.avatar ? roomInfo.user.avatar : defaultAvatar} />\n            <p className='title'>\n                {roomInfo.user.name}\n            </p>\n        </div>\n        : null\n    );\n};"]},"metadata":{},"sourceType":"module"}