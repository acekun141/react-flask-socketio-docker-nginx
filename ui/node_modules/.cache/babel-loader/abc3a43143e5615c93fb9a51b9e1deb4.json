{"ast":null,"code":"import { GET_FAVORITES, REMOVE_FAVORITE, ADD_FAVORITE } from \"./actionTypes\";\nexport const get_favorites = () => async dispatch => {\n  try {\n    const response = await fetch('/auth/favorite', {\n      method: 'GET',\n      headers: {\n        'x-access-token': localStorage.getItem('token')\n      }\n    });\n    const data = await response.json();\n\n    if (data.favorites) {\n      return dispatch({\n        type: GET_FAVORITES,\n        payload: data.favorites\n      });\n    } else {\n      throw 'error';\n    }\n  } catch (error) {\n    console.log(error);\n    alert('something wrong! sorry about that!');\n  }\n};\nexport const add_favorite = user => async dispatch => {\n  try {\n    const response = await fetch('/auth/favorite', {\n      method: 'POST',\n      cache: 'no-cache',\n      headers: {\n        'x-access-token': localStorage.getItem('token'),\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        userID: user.id\n      })\n    });\n    const data = await response.json();\n\n    if (data.message) {\n      return dispatch({\n        type: ADD_FAVORITE,\n        payload: user\n      });\n    } else {\n      throw 'error';\n    }\n  } catch (error) {\n    alert('something wrong! sorry about that!');\n  }\n};\nexport const remove_favorite = user_id => async dispatch => {\n  try {\n    const response = await fetch('/auth/favorite', {\n      method: 'DELETE',\n      cache: 'no-cache',\n      headers: {\n        'x-access-token': localStorage.getItem('token'),\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        userID: user_id\n      })\n    });\n    const data = await response.json();\n\n    if (data.message) {\n      return dispatch({\n        type: REMOVE_FAVORITE,\n        payload: user_id\n      });\n    } else {\n      throw 'error';\n    }\n  } catch (error) {\n    alert('something wrong! sorry about that!');\n  }\n};","map":{"version":3,"sources":["/home/ace/Documents/Project/privatechat/src/redux/reducer/favorites/actions.js"],"names":["GET_FAVORITES","REMOVE_FAVORITE","ADD_FAVORITE","get_favorites","dispatch","response","fetch","method","headers","localStorage","getItem","data","json","favorites","type","payload","error","console","log","alert","add_favorite","user","cache","body","JSON","stringify","userID","id","message","remove_favorite","user_id"],"mappings":"AAAA,SAASA,aAAT,EAAwBC,eAAxB,EAAyCC,YAAzC,QAA6D,eAA7D;AAEA,OAAO,MAAMC,aAAa,GAAG,MAAM,MAAOC,QAAP,IAAoB;AACnD,MAAI;AACA,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,gBAAD,EACxB;AACIC,MAAAA,MAAM,EAAE,KADZ;AAEIC,MAAAA,OAAO,EAAE;AACL,0BAAkBC,YAAY,CAACC,OAAb,CAAqB,OAArB;AADb;AAFb,KADwB,CAA5B;AAQA,UAAMC,IAAI,GAAG,MAAMN,QAAQ,CAACO,IAAT,EAAnB;;AACA,QAAID,IAAI,CAACE,SAAT,EAAoB;AAChB,aAAOT,QAAQ,CAAC;AACZU,QAAAA,IAAI,EAAEd,aADM;AAEZe,QAAAA,OAAO,EAAEJ,IAAI,CAACE;AAFF,OAAD,CAAf;AAIH,KALD,MAKO;AACH,YAAM,OAAN;AACH;AACJ,GAlBD,CAkBE,OAAMG,KAAN,EAAa;AACXC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACAG,IAAAA,KAAK,CAAC,oCAAD,CAAL;AACH;AACJ,CAvBM;AAyBP,OAAO,MAAMC,YAAY,GAAIC,IAAD,IAAU,MAAOjB,QAAP,IAAoB;AACtD,MAAI;AACA,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,gBAAD,EACxB;AACIC,MAAAA,MAAM,EAAE,MADZ;AAEIe,MAAAA,KAAK,EAAE,UAFX;AAGId,MAAAA,OAAO,EAAE;AACL,0BAAkBC,YAAY,CAACC,OAAb,CAAqB,OAArB,CADb;AAEL,wBAAgB;AAFX,OAHb;AAQIa,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAACC,QAAAA,MAAM,EAAEL,IAAI,CAACM;AAAd,OAAf;AARV,KADwB,CAA5B;AAYA,UAAMhB,IAAI,GAAG,MAAMN,QAAQ,CAACO,IAAT,EAAnB;;AACA,QAAID,IAAI,CAACiB,OAAT,EAAkB;AACd,aAAOxB,QAAQ,CAAC;AACZU,QAAAA,IAAI,EAAEZ,YADM;AAEZa,QAAAA,OAAO,EAAEM;AAFG,OAAD,CAAf;AAIH,KALD,MAKO;AACH,YAAM,OAAN;AACH;AACJ,GAtBD,CAsBE,OAAML,KAAN,EAAa;AACXG,IAAAA,KAAK,CAAC,oCAAD,CAAL;AACH;AACJ,CA1BM;AA6BP,OAAO,MAAMU,eAAe,GAAIC,OAAD,IAAa,MAAO1B,QAAP,IAAoB;AAC5D,MAAI;AACA,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,gBAAD,EACxB;AACIC,MAAAA,MAAM,EAAE,QADZ;AAEIe,MAAAA,KAAK,EAAE,UAFX;AAGId,MAAAA,OAAO,EAAE;AACL,0BAAkBC,YAAY,CAACC,OAAb,CAAqB,OAArB,CADb;AAEL,wBAAgB;AAFX,OAHb;AAOIa,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAACC,QAAAA,MAAM,EAAEI;AAAT,OAAf;AAPV,KADwB,CAA5B;AAWA,UAAMnB,IAAI,GAAG,MAAMN,QAAQ,CAACO,IAAT,EAAnB;;AACA,QAAID,IAAI,CAACiB,OAAT,EAAkB;AACd,aAAOxB,QAAQ,CAAC;AACZU,QAAAA,IAAI,EAAEb,eADM;AAEZc,QAAAA,OAAO,EAAEe;AAFG,OAAD,CAAf;AAIH,KALD,MAKO;AACH,YAAM,OAAN;AACH;AACJ,GArBD,CAqBE,OAAMd,KAAN,EAAa;AACXG,IAAAA,KAAK,CAAC,oCAAD,CAAL;AACH;AACJ,CAzBM","sourcesContent":["import { GET_FAVORITES, REMOVE_FAVORITE, ADD_FAVORITE } from \"./actionTypes\";\n\nexport const get_favorites = () => async (dispatch) => {\n    try {\n        const response = await fetch('/auth/favorite',\n            {\n                method: 'GET',\n                headers: {\n                    'x-access-token': localStorage.getItem('token')\n                }\n            }\n        );\n        const data = await response.json();\n        if (data.favorites) {\n            return dispatch({\n                type: GET_FAVORITES,\n                payload: data.favorites\n            });\n        } else {\n            throw('error')\n        }\n    } catch(error) {\n        console.log(error);\n        alert('something wrong! sorry about that!');\n    }\n}\n\nexport const add_favorite = (user) => async (dispatch) => {\n    try {\n        const response = await fetch('/auth/favorite',\n            {\n                method: 'POST',\n                cache: 'no-cache',\n                headers: {\n                    'x-access-token': localStorage.getItem('token'),\n                    'Content-Type': 'application/json'\n\n                },\n                body: JSON.stringify({userID: user.id})\n            }\n        );\n        const data = await response.json();\n        if (data.message) {\n            return dispatch({\n                type: ADD_FAVORITE,\n                payload: user\n            });\n        } else {\n            throw('error')\n        }\n    } catch(error) {\n        alert('something wrong! sorry about that!');\n    }\n}\n\n\nexport const remove_favorite = (user_id) => async (dispatch) => {\n    try {\n        const response = await fetch('/auth/favorite',\n            {\n                method: 'DELETE',\n                cache: 'no-cache',\n                headers: {\n                    'x-access-token': localStorage.getItem('token'),\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({userID: user_id})\n            }\n        );\n        const data = await response.json();\n        if (data.message) {\n            return dispatch({\n                type: REMOVE_FAVORITE,\n                payload: user_id\n            });\n        } else {\n            throw('error')\n        }\n    } catch(error) {\n        alert('something wrong! sorry about that!');\n    }\n}"]},"metadata":{},"sourceType":"module"}