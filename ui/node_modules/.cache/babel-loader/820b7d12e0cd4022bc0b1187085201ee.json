{"ast":null,"code":"export const get_facebook_friend = async token => {\n  try {\n    // const response = await fetch(`https://graph.facebook.com/v6.0/me?fields=friends.limit=(1)%7Bpicture%7Burl%7D%2Cname%7D&access_token=${token}`);\n    const response = await fetch(`https://graph.facebook.com/v6.0/me?fields=friends.limit(10)%7Bpicture%7Burl%7D%2Cname%7D&access_token=${token}\"\n`);\n    const data = await response.json();\n\n    if (data.friends) {\n      return data;\n    } else {\n      throw 'Error';\n    }\n  } catch (error) {\n    alert('Something wrong. Try later');\n    return null;\n  }\n};\nexport const get_next_friend = async url => {\n  try {\n    const response = await fetch(url);\n    const data = await response.json();\n\n    if (data.data) {\n      return data;\n    } else {\n      throw 'Error';\n    }\n  } catch (error) {\n    alert('Something wrong. Try later');\n    return null;\n  }\n};\nexport const get_room = async user_id => {\n  try {\n    const response = await fetch('/chat/room', {\n      method: 'POST',\n      cache: 'no-cache',\n      headers: {\n        'Content-Type': 'application/json',\n        'x-access-token': localStorage.getItem('token')\n      },\n      body: JSON.stringify({\n        user_id\n      })\n    });\n    const data = await response.json();\n\n    if (data.room && data.user_id && data.private_user) {\n      return data;\n    } else {\n      return false;\n    }\n  } catch (error) {\n    alert('Cannot login! Try later');\n    return false;\n  }\n};","map":{"version":3,"sources":["/home/ace/Documents/Project/privatechat/src/actions/homePage.js"],"names":["get_facebook_friend","token","response","fetch","data","json","friends","error","alert","get_next_friend","url","get_room","user_id","method","cache","headers","localStorage","getItem","body","JSON","stringify","room","private_user"],"mappings":"AAAA,OAAO,MAAMA,mBAAmB,GAAG,MAAOC,KAAP,IAAiB;AAChD,MAAI;AACA;AACA,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,yGAAwGF,KAAM;CAAhH,CAA5B;AAEA,UAAMG,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;;AACA,QAAID,IAAI,CAACE,OAAT,EAAkB;AACd,aAAOF,IAAP;AACH,KAFD,MAEO;AACH,YAAM,OAAN;AACH;AACJ,GAVD,CAUE,OAAMG,KAAN,EAAa;AACXC,IAAAA,KAAK,CAAC,4BAAD,CAAL;AACA,WAAO,IAAP;AACH;AACJ,CAfM;AAiBP,OAAO,MAAMC,eAAe,GAAG,MAAOC,GAAP,IAAe;AAC1C,MAAI;AACA,UAAMR,QAAQ,GAAG,MAAMC,KAAK,CAACO,GAAD,CAA5B;AACA,UAAMN,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;;AACA,QAAID,IAAI,CAACA,IAAT,EAAe;AACX,aAAOA,IAAP;AACH,KAFD,MAEO;AACH,YAAM,OAAN;AACH;AACJ,GARD,CAQE,OAAMG,KAAN,EAAa;AACXC,IAAAA,KAAK,CAAC,4BAAD,CAAL;AACA,WAAO,IAAP;AACH;AACJ,CAbM;AAeP,OAAO,MAAMG,QAAQ,GAAG,MAAOC,OAAP,IAAmB;AACvC,MAAI;AACA,UAAMV,QAAQ,GAAG,MAAMC,KAAK,CAAC,YAAD,EACxB;AACIU,MAAAA,MAAM,EAAE,MADZ;AAEIC,MAAAA,KAAK,EAAE,UAFX;AAGIC,MAAAA,OAAO,EAAE;AACL,wBAAgB,kBADX;AAEL,0BAAkBC,YAAY,CAACC,OAAb,CAAqB,OAArB;AAFb,OAHb;AAOIC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAACR,QAAAA;AAAD,OAAf;AAPV,KADwB,CAA5B;AAWA,UAAMR,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;;AACA,QAAID,IAAI,CAACiB,IAAL,IAAajB,IAAI,CAACQ,OAAlB,IAA6BR,IAAI,CAACkB,YAAtC,EAAoD;AAChD,aAAOlB,IAAP;AACH,KAFD,MAEO;AACH,aAAO,KAAP;AACH;AACJ,GAlBD,CAkBE,OAAMG,KAAN,EAAa;AACXC,IAAAA,KAAK,CAAC,yBAAD,CAAL;AACA,WAAO,KAAP;AACH;AACJ,CAvBM","sourcesContent":["export const get_facebook_friend = async (token) => {\n    try {\n        // const response = await fetch(`https://graph.facebook.com/v6.0/me?fields=friends.limit=(1)%7Bpicture%7Burl%7D%2Cname%7D&access_token=${token}`);\n        const response = await fetch(`https://graph.facebook.com/v6.0/me?fields=friends.limit(10)%7Bpicture%7Burl%7D%2Cname%7D&access_token=${token}\"\n`)\n        const data = await response.json();\n        if (data.friends) {\n            return data;\n        } else {\n            throw('Error');\n        }\n    } catch(error) {\n        alert('Something wrong. Try later');\n        return null;\n    }\n}\n\nexport const get_next_friend = async (url) => {\n    try {\n        const response = await fetch(url);\n        const data = await response.json();\n        if (data.data) {\n            return data;\n        } else {\n            throw('Error');\n        }\n    } catch(error) {\n        alert('Something wrong. Try later');\n        return null;\n    }\n}\n\nexport const get_room = async (user_id) => {\n    try {\n        const response = await fetch('/chat/room',\n            {\n                method: 'POST',\n                cache: 'no-cache',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'x-access-token': localStorage.getItem('token')\n                },\n                body: JSON.stringify({user_id})\n            }\n        );\n        const data = await response.json();\n        if (data.room && data.user_id && data.private_user) {\n            return data;\n        } else {\n            return false;\n        }\n    } catch(error) {\n        alert('Cannot login! Try later');\n        return false;\n    }\n}"]},"metadata":{},"sourceType":"module"}