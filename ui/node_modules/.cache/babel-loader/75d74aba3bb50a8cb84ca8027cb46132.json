{"ast":null,"code":"var _jsxFileName = \"/home/ace/Documents/Project/privatechat/src/components/LeftSide.js\";\nimport React, { useEffect, useState } from 'react';\nimport { FiUserCheck, FiUserX } from 'react-icons/fi';\nimport { Avatar } from '../pages/HomePage';\nimport defaultAvatar from '../images/avatar.png';\nimport { useHistory } from 'react-router-dom';\nimport { useParams } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { get_room, get_all_room } from '../actions/directPage';\nimport io from 'socket.io-client';\nconst socket = io.connect('http://localhost:5000');\nexport default function (props) {\n  const [knownRooms, setKnownRooms] = useState([]);\n  const [unknownRooms, setUnknownRooms] = useState([]);\n  const [show, setShow] = useState(1);\n  const {\n    room_id\n  } = useParams();\n  const user = useSelector(state => state.user);\n  const history = useHistory();\n  useEffect(() => {\n    const async_function = async () => {\n      const data = await get_all_room();\n\n      if (data) {\n        setKnownRooms([...data.known_rooms]);\n        setUnknownRooms([...data.unknown_rooms]);\n      }\n    };\n\n    async_function();\n    socket.emit('join', {\n      room_id: user.userID,\n      token: localStorage.getItem('token')\n    });\n    socket.on('take_new', room_data => {\n      console.log(room_data);\n      setKnownRooms(oldKnownRooms => {\n        return oldKnownRooms.map(known_data => {\n          if (known_data.id === room_data.id) {\n            console.log(room_data.id);\n            return room_data;\n          } else {\n            return known_data;\n          }\n        });\n      });\n      setUnknownRooms(oldUnknownRooms => {\n        return oldUnknownRooms.map(unknown_data => {\n          if (unknown_data.id === room_data.id) {\n            console.log(room_data.id);\n            return room_data;\n          } else {\n            return unknown_data;\n          }\n        });\n      });\n    });\n    return () => {\n      socket.off('take_new');\n      socket.emit('leave', {\n        room_id: user.userID,\n        token: localStorage.getItem('token')\n      });\n    };\n  }, [user]);\n  useEffect(() => {\n    const async_function = async () => {\n      const data = await get_room(room_id);\n\n      if (data, data.room_id, data.user) {\n        props.setRoomInfo(data);\n      }\n    };\n\n    if (room_id) {\n      async_function();\n    }\n  }, [room_id]);\n\n  const showKnown = () => {\n    const known = document.getElementById('known');\n    const unknown = document.getElementById('unknown');\n    setShow(1);\n    known.classList.add('active');\n    unknown.classList.remove('active');\n  };\n\n  const showUnknown = () => {\n    const known = document.getElementById('known');\n    const unknown = document.getElementById('unknown');\n    setShow(2);\n    known.classList.remove('active');\n    unknown.classList.add('active');\n  };\n\n  const enterRoom = room_data => {\n    props.setRoomInfo(room_data);\n    history.push(`/direct/${room_data.room_id}`);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"left-side\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"side-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    id: \"known\",\n    className: \"choose friends active\",\n    onClick: () => showKnown(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FiUserCheck, {\n    size: 20,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 21\n    }\n  }, \"Friends\")), /*#__PURE__*/React.createElement(\"button\", {\n    id: \"unknown\",\n    className: \"choose unknown\",\n    onClick: () => showUnknown(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FiUserX, {\n    size: 20,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 21\n    }\n  }, \"Unknown\"))), show === 1 ? /*#__PURE__*/React.createElement(KnownRooms, {\n    data: knownRooms,\n    enter: enterRoom,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 19\n    }\n  }) : null, show === 2 ? /*#__PURE__*/React.createElement(UnknownRooms, {\n    data: unknownRooms,\n    enter: enterRoom,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 19\n    }\n  }) : null);\n}\n;\n\nconst UnknownRooms = props => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"wrap-list-friend\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }\n  }, props.data.map(room_data => /*#__PURE__*/React.createElement(\"button\", {\n    key: room_data.room_id,\n    className: `friend ${room_data.seen}`,\n    onClick: () => props.enter(room_data),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"friend-left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Avatar, {\n    url: defaultAvatar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"friend-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 25\n    }\n  }, room_data.user.name)))));\n};\n\nconst KnownRooms = props => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"wrap-list-friend\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 9\n    }\n  }, props.data.map(room_data => /*#__PURE__*/React.createElement(\"button\", {\n    key: room_data.room_id,\n    className: `friend ${room_data.seen}`,\n    onClick: () => props.enter(room_data),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"friend-left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Avatar, {\n    url: room_data.user.avatar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"friend-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 25\n    }\n  }, room_data.user.name)))));\n};","map":{"version":3,"sources":["/home/ace/Documents/Project/privatechat/src/components/LeftSide.js"],"names":["React","useEffect","useState","FiUserCheck","FiUserX","Avatar","defaultAvatar","useHistory","useParams","useSelector","get_room","get_all_room","io","socket","connect","props","knownRooms","setKnownRooms","unknownRooms","setUnknownRooms","show","setShow","room_id","user","state","history","async_function","data","known_rooms","unknown_rooms","emit","userID","token","localStorage","getItem","on","room_data","console","log","oldKnownRooms","map","known_data","id","oldUnknownRooms","unknown_data","off","setRoomInfo","showKnown","known","document","getElementById","unknown","classList","add","remove","showUnknown","enterRoom","push","UnknownRooms","seen","enter","name","KnownRooms","avatar"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport {FiUserCheck, FiUserX} from 'react-icons/fi';\nimport {Avatar} from '../pages/HomePage';\nimport defaultAvatar from '../images/avatar.png';\nimport {useHistory} from 'react-router-dom';\nimport {useParams} from 'react-router-dom';\nimport {useSelector} from 'react-redux';\nimport {get_room, get_all_room} from '../actions/directPage';\nimport io from 'socket.io-client';\n\nconst socket = io.connect('http://localhost:5000');\n\nexport default function(props) {\n    const [knownRooms, setKnownRooms] = useState([]);\n    const [unknownRooms, setUnknownRooms] = useState([]);\n    const [show, setShow] = useState(1);\n    const {room_id} = useParams();\n    const user = useSelector(state => state.user);\n    const history = useHistory();\n    useEffect(() => {\n        const async_function = async () => {\n            const data = await get_all_room();\n            if (data) {\n                setKnownRooms([...data.known_rooms]);\n                setUnknownRooms([...data.unknown_rooms]);\n            }\n        };\n        async_function();\n        socket.emit('join', {room_id: user.userID, token: localStorage.getItem('token')})\n        socket.on('take_new', (room_data) => {\n            console.log(room_data);\n            setKnownRooms(oldKnownRooms => {\n                return oldKnownRooms.map(known_data => {\n                    if (known_data.id === room_data.id) {\n                        console.log(room_data.id)\n                        return room_data;\n                    } else {\n                        return known_data;\n                    }\n                });\n            })    \n            setUnknownRooms(oldUnknownRooms => {\n                return oldUnknownRooms.map(unknown_data => {\n                    if (unknown_data.id === room_data.id) {\n                        console.log(room_data.id)\n                        return room_data;\n                    } else {\n                        return unknown_data;\n                    }\n                });\n            })    \n        })\n        return () => {\n            socket.off('take_new');\n            socket.emit('leave', {room_id: user.userID, token: localStorage.getItem('token')});\n        }\n    }, [user]);\n    useEffect(() => {\n        const async_function = async () => {\n            const data = await get_room(room_id);\n            if (data, data.room_id, data.user) {\n                props.setRoomInfo(data);\n            }\n        }\n        if (room_id) {\n            async_function();\n        }\n    }, [room_id]);\n    const showKnown = () => {\n        const known = document.getElementById('known');\n        const unknown = document.getElementById('unknown');\n        setShow(1);\n        known.classList.add('active');\n        unknown.classList.remove('active');\n    };\n    const showUnknown = () => {\n        const known = document.getElementById('known');\n        const unknown = document.getElementById('unknown');\n        setShow(2)\n        known.classList.remove('active');\n        unknown.classList.add('active');\n    };\n    const enterRoom = (room_data) => {\n        props.setRoomInfo(room_data);\n        history.push(`/direct/${room_data.room_id}`);\n    }\n    return (\n        <div className='left-side'>\n            <div className='side-header'>\n                <button id='known' className='choose friends active'\n                        onClick={() => showKnown()}\n                >\n                    <FiUserCheck size={20} />\n                    <p>Friends</p>\n                </button>\n                <button id='unknown' className='choose unknown'\n                        onClick={() => showUnknown()}\n                >\n                    <FiUserX size={20} />\n                    <p>Unknown</p>\n                </button>\n            </div>\n            {show === 1\n                ? <KnownRooms data={knownRooms} enter={enterRoom} />\n                : null\n            }\n            {show === 2\n                ? <UnknownRooms data={unknownRooms} enter={enterRoom} />\n                : null\n            }\n        </div>\n    );\n};\n\nconst UnknownRooms = (props) => {\n    return (\n        <div className='wrap-list-friend'>\n            {props.data.map(room_data => (\n                <button key={room_data.room_id} className={`friend ${room_data.seen}`}\n                        onClick={() => props.enter(room_data)}\n                >\n                    <div className='friend-left'>\n                        <Avatar url={defaultAvatar} />\n                    </div>\n                    <div className='friend-right'>\n                        <p className='name'>{room_data.user.name}</p>\n                    </div>\n                </button>\n            ))}\n        </div>\n    );\n}\n\nconst KnownRooms = (props) => {\n    return (\n        <div className='wrap-list-friend'>\n            {props.data.map(room_data => (\n                <button key={room_data.room_id} className={`friend ${room_data.seen}`}\n                        onClick={() => props.enter(room_data)}\n                >\n                    <div className='friend-left'>\n                        <Avatar url={room_data.user.avatar} />\n                    </div>\n                    <div className='friend-right'>\n                        <p className='name'>{room_data.user.name}</p>\n                    </div>\n                </button>\n            ))}\n        </div>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}